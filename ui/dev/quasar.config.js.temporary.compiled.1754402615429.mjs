/* eslint-disable */
/**
 * THIS FILE IS GENERATED AUTOMATICALLY.
 * 1. DO NOT edit this file directly as it won't do anything.
 * 2. EDIT the original quasar.config file INSTEAD.
 * 3. DO NOT git commit this file. It should be ignored.
 *
 * This file is still here because there was an error in
 * the original quasar.config file and this allows you to
 * investigate the Node.js stack error.
 *
 * After you fix the original file, this file will be
 * deleted automatically.
 **/

var __getOwnPropNames = Object.getOwnPropertyNames;
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// ../package.json
var require_package = __commonJS({
  "../package.json"(exports, module) {
    module.exports = {
      name: "quasar-ui-qhtmlbuilder",
      version: "1.0.13",
      author: "Dipak Sarkar <hello@dipaksarkar.in>",
      description: "A Quasar app extension for integrating GrapesJS HTML builder into Quasar applications.",
      license: "MIT",
      module: "dist/index.esm.js",
      main: "dist/index.common.js",
      scripts: {
        dev: "cd dev && yarn dev && cd ..",
        "dev:umd": "yarn build && node build/script.open-umd.js",
        "dev:ssr": "cd dev && yarn 'dev:ssr' && cd ..",
        "dev:ios": "cd dev && yarn 'dev:ios' && cd ..",
        "dev:android": "cd dev && yarn 'dev:android' && cd ..",
        "dev:electron": "cd dev && yarn 'dev:electron' && cd ..",
        build: "node build/index.js",
        "build:js": "node build/script.javascript.js",
        "build:css": "node build/script.css.js"
      },
      repository: {
        type: "git",
        url: "https://github.com/coders-tm/quasar-app-extension-qhtmlbuilder"
      },
      bugs: "",
      homepage: "",
      dependencies: {
        grapesjs: "^0.21.10",
        "grapesjs-blocks-basic": "^1.0.2",
        "grapesjs-component-countdown": "^1.0.2",
        "grapesjs-custom-code": "^1.0.2",
        "grapesjs-parser-postcss": "^1.0.3",
        "grapesjs-plugin-ckeditor": "^1.0.1",
        "grapesjs-plugin-export": "^1.0.12",
        "grapesjs-plugin-forms": "^2.0.6",
        "grapesjs-preset-webpage": "^1.0.3",
        "grapesjs-style-bg": "^2.0.2",
        "grapesjs-tabs": "^1.0.6",
        "grapesjs-templates": "^1.0.4",
        "grapesjs-tooltip": "^0.1.8",
        "grapesjs-touch": "^0.1.1",
        "grapesjs-tui-image-editor": "^1.0.2",
        "grapesjs-typed": "^2.0.1"
      },
      devDependencies: {
        "@quasar/app-webpack": "^3.0.0",
        "@quasar/extras": "^1.16.4",
        "@rollup/plugin-buble": "^0.21.3",
        "@rollup/plugin-commonjs": "^25.0.7",
        "@rollup/plugin-json": "^4.0.0",
        "@rollup/plugin-node-resolve": "^13.0.6",
        "@rollup/plugin-replace": "^2.4.2",
        autoprefixer: "^10.0.2",
        buble: "^0.20.0",
        chalk: "^4.1.0",
        "core-js": "^3.0.0",
        cssnano: "^4.1.10",
        "fs-extra": "^8.1.0",
        open: "^7.3.0",
        postcss: "^8.1.9",
        quasar: "^2.0.0",
        rimraf: "^3.0.0",
        rollup: "^2.45.0",
        rtlcss: "^2.6.1",
        sass: "^1.33.0",
        "uglify-js": "^3.13.3",
        vue: "^3.0.0",
        "vue-router": "^4.0.0",
        zlib: "^1.0.5"
      },
      browserslist: [
        "last 4 Chrome versions",
        "last 4 Firefox versions",
        "last 2 Edge versions",
        "last 4 Safari versions",
        "last 4 Android versions",
        "last 4 ChromeAndroid versions",
        "last 4 FirefoxAndroid versions",
        "last 4 iOS versions"
      ]
    };
  }
});

// quasar.config.js
var require_quasar_config = __commonJS({
  "quasar.config.js"(exports, module) {
    var __quasar_inject_dirname__ = "/home/runner/work/quasar-app-extension-qhtmlbuilder/quasar-app-extension-qhtmlbuilder/ui/dev";
    var path = __require("path");
    var webpack = __require("webpack");
    module.exports = function(ctx) {
      return {
        // app boot file (/src/boot)
        // --> boot files are part of "main.js"
        boot: ["register.js"],
        css: ["app.sass"],
        extras: [
          // 'ionicons-v4',
          // 'mdi-v5',
          // 'fontawesome-v5',
          // 'eva-icons',
          // 'themify',
          // 'line-awesome',
          // 'roboto-font-latin-ext', // this or either 'roboto-font', NEVER both!
          "roboto-font",
          // optional, you are not bound to it
          "material-icons"
          // optional, you are not bound to it
        ],
        framework: {
          // iconSet: 'material-icons', // Quasar icon set
          // lang: 'en-US', // Quasar language pack
          config: {},
          // Quasar plugins
          plugins: ["Dialog"]
        },
        // animations: 'all', // --- includes all animations
        animations: [],
        // Full list of options: https://quasar.dev/quasar-cli/quasar-conf-js#Property%3A-build
        build: {
          vueRouterMode: "history",
          chainWebpack(chain) {
            chain.resolve.alias.merge({
              ui: path.resolve(__quasar_inject_dirname__, `../src/index.esm.js`)
            });
            chain.plugin("define-ui").use(webpack.DefinePlugin, [
              {
                __UI_VERSION__: `'${require_package().version}'`
              }
            ]);
          }
        },
        devServer: {
          // port: 8080,
          open: true,
          // opens browser window automatically
          headers: {
            "Access-Control-Allow-Origin": "*"
          }
        },
        ssr: {
          middlewares: [
            ctx.prod ? "compression" : "",
            "render"
            // keep this as last one
          ]
        }
      };
    };
  }
});
export default require_quasar_config();
